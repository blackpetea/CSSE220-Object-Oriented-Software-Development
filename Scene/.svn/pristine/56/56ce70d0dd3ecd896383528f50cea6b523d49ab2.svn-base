
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Stroke;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;

public class Face  {
	//TODO: Add your fields here
	
	//TODO: Create constructors here
	
	public void drawOn(Graphics2D graphics) {
		//TODO: Add the code for drawing a Face
	}
	

	/**
	 * Returns the upper left location of an eye based on the center of the face and
	 * whether or not it's the left or right eye.
	 * 
	 * @param isLeftEye - true if it's the left eye, false if it's the 
	 * @param faceRadius - The radius of the eye
	 * @return a point representing the upper left location of an eye relative to the center of a face
	 */
	private static Point2D.Double getEyeUpperLeftLocationFromCenterOfFace(boolean isLeftEye, double faceRadius) {
		int multiplier = isLeftEye ? -1 : 1;
		double eyeCenterX = ((faceRadius * .5) * Math.cos(Math.toRadians(45)))*multiplier;
		double eyeCenterY = -((faceRadius * .5) * Math.sin(Math.toRadians(45)));
		return new Point2D.Double(eyeCenterX - getEyeRadius(faceRadius), eyeCenterY - getEyeRadius(faceRadius));
	}
	
	/**
	 * Returns the radius of an eye based on the radius of a face.
	 * 
	 * @param faceRadius - the radius of the face
	 * @return
	 */
	private static double getEyeRadius(double faceRadius) {
		return 0.28*faceRadius;
	}
	
}
