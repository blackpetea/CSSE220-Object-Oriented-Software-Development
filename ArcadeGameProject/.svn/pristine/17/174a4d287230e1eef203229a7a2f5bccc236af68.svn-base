import java.awt.Color;
import java.awt.geom.Point2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

/**
 * Here is the Class for Hero
 *
 * @author Muqing Zheng. Created Feb 4, 2016.
 */
public class Hero extends Creature {

	private double diameter;
	private boolean isAlive;

	public Hero(GameWorld world, Point2D center) {
		super(world, center);
		this.diameter = 20;
		this.color = Color.YELLOW;
		this.speedx = 0;
		this.speedy = 0;
		this.isAlive = true;
		this.setCenterPoint(center);
	}

	public void setSpeedx(double speed) {
		this.speedx = speed;
	}

	public void setSpeedy(double speed) {
		this.speedy = speed;
	}

	public boolean isAlive() {
		return this.isAlive;
	}

	/******************************************************
	 * 
	 * To avoid the hero move out of the world.
	 *
	 * @return the new center point within the world.
	 */
	public void setMovingLimit() {

		Point2D newPoint = this.moveBy(this.speedx, this.speedy);
		if (10 > newPoint.getX() || newPoint.getX() > 465) {
			newPoint = this.moveBy(newPoint, -speedx, 0);
		}
		if (470 > newPoint.getY() || newPoint.getY() > 620) {
			newPoint = this.moveBy(newPoint, 0, -speedy);
		}
		this.setCenterPoint(newPoint);
	}

	@Override
	public Color getColor() {
		return this.color;
	}

	@Override
	public void updatePosition() {
		this.setMovingLimit();
		this.setCenterPoint(this.getCenterPoint());
	}

	@Override
	public void updateSize() {

	}

	@Override
	public void updateColor() {

	}

	@Override
	public double getDiameter() {
		return this.diameter;
	}

	/****
	 * @return the name of calss
	 */
	@Override
	public String getClassName() {
		return "Hero";
	}

	// -------------------------------------------------------------------------
	// Abstract "Collision methods" that must be overridden by subclasses.

	@Override
	public void collide(Creature m) {
		m.collideWithHero(this);
	}

	@Override
	public void collideWithMushroom(Mushroom m) {
		Point2D newPoint = this.moveBy(-this.speedx, -this.speedy);
		this.speedx = 0;
		this.speedy = 0;
		this.setCenterPoint(newPoint);
	}

	@Override
	public void collideWithCentipede(Centipede m) {
		this.isAlive = false;
		this.die();

	}

	@Override
	public void collideWithHero(Hero m) {

	}

	@Override
	public void collideWithBullet(Bullet m) {

	}

	@Override
	public void collideWithScorpion(Scorpion m) {
		this.isAlive = false;
		this.die();
	}

	@Override
	public void collideWithFleas(Fleas m) {
		this.isAlive = false;
		this.die();
	}

	@Override
	public void collideWithSpider(Spider m) {
		this.isAlive = false;
		this.die();
	}

	@Override
	public void collideWithAPBeam(APBeam m) {

	}

	@Override
	public BufferedImage getImage() {
		// TODO Auto-generated method stub.
		try {
			return ImageIO.read(new File("Files\\ship.png"));
		} catch (IOException exception) {}
		return null;
	}

	@Override
	public double getX() {
		// TODO Auto-generated method stub.
		return this.getCenterPoint().getX();
	}

	@Override
	public double getY() {
		// TODO Auto-generated method stub.
		return this.getCenterPoint().getY();
	}

	@Override
	public int getType() {
		// TODO Auto-generated method stub.
		return 1;
	}

}
