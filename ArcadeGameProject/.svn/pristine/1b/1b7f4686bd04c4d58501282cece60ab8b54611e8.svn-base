import java.awt.Color;
import java.awt.geom.Point2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class BOSS extends Creature {
	
	private double HP;
	private double MP;
	private GameWorld world;

	public BOSS(GameWorld world, Point2D centerPoint) {
		super(world, centerPoint);
		this.world=world;
		this.HP=100;
		this.MP=50;
		this.diameter=100;
	}
	
	private void fireAP() {
		Point2D firePoint=this.getCenterPoint();
		firePoint = this.world.getHero().moveBy(firePoint, -60, 0);
		for (int i = -1; i < 2; i++) {
			firePoint = this.world.getHero().moveBy(firePoint, 30, 0);
			this.world.addCreature(new APBeam(this.world,firePoint,i,-1));
		}
	}
	
	private void fireShotgun() {
		Point2D firePoint=this.getCenterPoint();
		firePoint = this.world.getHero().moveBy(firePoint, -30, 0);
		for (int i = -2; i < 3; i++) {
			firePoint = this.world.getHero().moveBy(firePoint, 10, 0);
			this.world.addCreature(new Shotgun(this.world, firePoint, i,-1));
		}
	}

	@Override
	public BufferedImage getImage() {
		try {
			return ImageIO.read(new File("Files\\BOSS.png"));
		} catch (IOException exception) {}
		return null;
	}

	@Override
	public double getX() {
		return this.getCenterPoint().getX()-this.diameter/2;
	}

	@Override
	public double getY() {
		return this.getCenterPoint().getY()-this.diameter/2;
	}

	@Override
	public int getType() {
		return 2;
	}

	@Override
	public void collide(Creature m) {
		m.collideWithBoss(this);
		
	}

	@Override
	public void collideWithMushroom(Mushroom m) {
		this.HP=this.HP+5;
	}

	@Override
	public void collideWithCentipede(Centipede m) {
		
	}

	@Override
	public void collideWithHero(Hero m) {
		
	}

	@Override
	public void collideWithScorpion(Scorpion m) {
		this.HP++;
	}

	@Override
	public void collideWithFleas(Fleas m) {
		this.HP++;
	}

	@Override
	public void collideWithSpider(Spider m) {
		this.HP++;
	}

	@Override
	public void collideWithBullet(Bullet m) {
		if (m.getDirection()>0) {
			this.HP--;
		}		
	}

	@Override
	public void collideWithAPBeam(APBeam m) {
		if (m.getDirection()>0) {
			this.HP=this.HP-10;
		}
	}

	@Override
	public void collideWithBoss(BOSS m) {
		
	}

	@Override
	public void updatePosition() {
		
	}

	@Override
	public void updateSize() {
		if (this.HP<100) {
			this.HP=this.HP+0.01;
		} if (this.MP<100) {
			this.MP=this.MP+0.1;
		}
		System.out.println("HP:"+this.HP+"MP:"+this.MP);
	}

	@Override
	public void updateColor() {
		if ((int)this.MP==50) {
			this.fireShotgun();
			this.MP++;
		} else if ((int)this.MP==100) {
			this.fireShotgun();
			this.fireShotgun();
			this.MP=this.MP-99;
		}
		if ((int)this.MP%20==0) {
			this.fireAP();
			this.MP++;
		}
	}

	@Override
	public double getDiameter() {
		return this.diameter;
	}
	
	@Override
	public String getClassName() {
		return "BOSS";
	}

	@Override
	public Color getColor() {
		return null;
	}
}
